/*
 * Copyright (c) 2022 Cisco and/or its affiliates.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.application'
    id 'com.github.triplet.play' version '3.4.0-agp4.2'
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId this.properties['APPLICATION_ID']
        minSdkVersion 28
        targetSdkVersion 29
        versionCode this.properties['VERSION_CODE'].toInteger()
        versionName getVersion()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions"
            }
        }
        ndk {
            abiFilters 'arm64-v8a', 'x86_64'
        }

        splits {
            abi {
                reset()
                include "arm64-v8a", 'x86_64'
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("hicnforwarder.keystore")
            storePassword "hicnforwarder"
            keyAlias "hicnforwarder"
            keyPassword "hicnforwarder"
        }
        debug {
            storeFile file("hicnforwarder.keystore")
            storePassword 'hicnforwarder'
            keyAlias 'hicnforwarder'
            keyPassword 'hicnforwarder'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def appName = "HicnForwarderAndroid"
            outputFileName = appName + ".apk"
        }
    }


    externalNativeBuild {
        cmake {
            path "src/main/jni/CMakeLists.txt"
            version "3.18.1"

        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}
if (this.properties['PLAYSTORE_KEY'] != '') {
    play {
        track.set(this.properties['TRACK'])
        serviceAccountCredentials.set(file(this.properties['PLAYSTORE_KEY']))
    }
}

def enableHProxy() {
    if ("${getProjectProperty('ENABLE_HPROXY')}".toInteger() == 1)
        return "-DENABLE_HPROXY=1"
    else
        return "-DENABLE_HPROXY=0"
}

def getVersionCode_() {
    if ("${getProjectProperty('VERSION_CODE')}".isEmpty())
        return 5
    else {
        return "${getProjectProperty('VERSION_CODE')}".toInteger()
    }
}


def getVersion() {

    if ("${getProjectProperty('VERSION')}".isEmpty())
        return "1.0"
    else {
        return "1." + "${getProjectProperty('VERSION')}"
    }
}



def String getProjectProperty(String propertyName)
{
    String value = "1"
    if (hasProperty(propertyName))
    {
        value = this.properties[propertyName]
    }
    return value
}


repositories {
    maven { url 'https://jitpack.io' }

    if (Integer.parseInt(this.properties['ENABLE_HPROXY']) == 1 && Integer.parseInt(this.properties['MODULE_HPROXY_SRC']) == 0) {
        maven {
            name = 'GitHubPackages'
            url = uri(this.properties['MVN_REPO_HPROXY'])
            credentials {
                username = this.properties["GITHUB_USER"]
                password = this.properties["GITHUB_TOKEN"]
            }
        }
    }

    maven {
        name = 'GitHubPackagesPublic'
        url = uri(this.properties['MVN_REPO'])
        credentials {
            username = this.properties["GITHUB_USER"]
            password = this.properties["GITHUB_TOKEN"]
        }
    }

}



dependencies {

    if (Integer.parseInt(this.properties['ENABLE_HPROXY']) == 1) {
        if (Integer.parseInt(this.properties['MODULE_HPROXY_SRC']) == 0) {
            implementation 'com.cisco.hicn:hproxy:+'
        } else {
            implementation project(":hproxyLibrarySrc")

        }
    } else {
        implementation project(":hproxyLibrary")
    }
    if (Integer.parseInt(this.properties['MODULE_SRC']) == 0) {
        implementation 'com.cisco.hicn:common:+'
        implementation 'com.cisco.hicn:hicnforwarder:+'
        implementation 'com.cisco.hicn:facemgr:+'
    } else {

        implementation project(":aar:facemgrLibrary")
        implementation project(":aar:hicnforwarderLibrary")
        implementation project(":aar:common")
    }
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'androidx.preference:preference:1.1.0-alpha05'
    implementation 'com.google.android.material:material:1.1.0-alpha05'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.github.cachapa:ExpandableLayout:2.9.2'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient-android', version: '4.3.5.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation group: 'com.google.collections', name: 'google-collections', version: '1.0'

}
